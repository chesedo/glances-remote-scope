var scopes = require('unity-js-scopes');

var NetworkCategory = function() {
    this.template = {
        "schema-version": 1,
        "template": {
            "category-layout": "vertical-journal",
            "collapsed-rows": 2,
            "card-size": "large"
        },
        "components": {
            "title": "title",
            "attributes": "attributes"
        }
    }
}

NetworkCategory.prototype.createCategory = function(search_reply, qs) {
    var category_renderer = new scopes.lib.CategoryRenderer(JSON.stringify(this.template));
    var category = search_reply.register_category("network", "Network", "", category_renderer);

    data.getValue("network").forEach(function(interface) {
        if (qs === "" || interface["interface_name"].search(qs) !== -1) {
            search_reply.push(this.createCard(interface, category))
        }
    }.bind(this));
}

NetworkCategory.prototype.createCard = function (interface, category) {
    var categorised_result = new scopes.lib.CategorisedResult(category);
    var table = [
                ["Down Speed", data.convertByteRate(interface["rx"] / interface["time_since_update"])],
                ["Up Speed", data.convertByteRate(interface["tx"] / interface["time_since_update"])],
                ["Total Speed", data.convertByteRate(interface["cx"] / interface["time_since_update"])],
                ["Down", data.convertByte(interface["cumulative_rx"])],
                ["Up", data.convertByte(interface["cumulative_tx"])],
                ["Total", data.convertByte(interface["cumulative_cx"])],
            ];
    var attributes = [
                {"value": "D: " + data.convertByteRate(interface["rx"] / interface["time_since_update"])},
                {"value": "U: " + data.convertByteRate(interface["tx"] / interface["time_since_update"])},
            ];

    categorised_result.set("resultCategory", "network");
    categorised_result.set_uri(interface["interface_name"]);
    categorised_result.set_title(interface["interface_name"]);
    categorised_result.set("table", table);
    categorised_result.set("attributes", attributes);

    return categorised_result;
}

NetworkCategory.prototype.createPreview = function(preview_reply) {
    var layout1col = new scopes.lib.ColumnLayout(1);
    layout1col.add_column(["header", "table"]);

    preview_reply.register_layout([layout1col]);

    var header = new scopes.lib.PreviewWidget("header", "header");
    header.add_attribute_mapping("title", "title");

    var table = new scopes.lib.PreviewWidget("table", "table");
    table.add_attribute_mapping("values", "table");

    preview_reply.push([header, table]);
    preview_reply.finished();
}

exports.NetworkCategory = NetworkCategory;
