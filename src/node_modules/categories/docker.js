var scopes = require('unity-js-scopes');

var DockerCategory = function() {
    this.template = {
        "schema-version": 1,
        "template": {
            "category-layout": "vertical-journal",
            "collapsed-rows": 8,
            "card-size": "large",
        },
        "components": {
            "title": "title",
            "attributes": "attributes"
        }
    }
}

DockerCategory.prototype.createCategory = function(search_reply, qs) {
    var category_renderer = new scopes.lib.CategoryRenderer(JSON.stringify(this.template));
    var category = search_reply.register_category("docker", "Docker Containers", "", category_renderer);

    data.getValue("docker_containers").forEach(function(container) {
        if (qs === "" || container["Image"].search(qs) !== -1 || container["Names"][0].search(qs) !== -1) {
            search_reply.push(this.createCard(container, category))
        }
    }.bind(this));
}

DockerCategory.prototype.createCard = function (container, category) {
    var categorised_result = new scopes.lib.CategorisedResult(category);
    var mainTable = [
                ["Id", container["Id"]],
                ["Status", container["Status"]],
                ["Created", new Date(container["Created"] * 1000).toLocaleString()],
                ["Image", container["Image"]],
                ["Command", container["Command"]]
            ];
    var resTable = [
                ["CPU System", container["cpu"].system + "%"],
                ["CPU User", container["cpu"].user + "%"],
                ["CPU Total", container["cpu"].total + "%"],
                ["Memory", data.convertByte(container["memory"].rss)],
                ["Memory Cache", data.convertByte(container["memory"].cache)],
            ]
    var attributes = [
                {"value": container["Id"]},
                {"value": container["Status"]},
            ];

    categorised_result.set("resultCategory", "docker");
    categorised_result.set_uri(container["Id"].toString());
    categorised_result.set_title(container["Names"][0].slice(1)); //Remove leading forward slash /
    categorised_result.set("mainTable", mainTable);
    categorised_result.set("resTable", resTable);
    categorised_result.set("attributes", attributes);

    return categorised_result;
}

DockerCategory.prototype.createPreview = function(preview_reply) {
    var layout1col = new scopes.lib.ColumnLayout(1);
    layout1col.add_column(["header", "mainTable", "resTable"]);

    preview_reply.register_layout([layout1col]);

    var header = new scopes.lib.PreviewWidget("header", "header");
    header.add_attribute_mapping("title", "title");

    var mainTable = new scopes.lib.PreviewWidget("mainTable", "table");
    mainTable.add_attribute_value("title", "Overview");
    mainTable.add_attribute_mapping("values", "mainTable");

    var resTable = new scopes.lib.PreviewWidget("resTable", "table");
    resTable.add_attribute_value("title", "Resources");
    resTable.add_attribute_mapping("values", "resTable");

    preview_reply.push([header, mainTable, resTable]);
    preview_reply.finished();
}

exports.DockerCategory = DockerCategory;
