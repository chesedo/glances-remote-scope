var scopes = require('unity-js-scopes');

var ProcessListCategory = function() {
    this.template = {
        "schema-version": 1,
        "template": {
            "category-layout": "vertical-journal",
            "collapsed-rows": 10,
            "card-size": "large"
        },
        "components": {
            "title": "title",
            "subtitle": "subtitle",
            "emblem": "emblem",
            "attributes": "attributes"
        }
    }
}

ProcessListCategory.prototype.createCategory = function(search_reply, qs) {
    var category_renderer = new scopes.lib.CategoryRenderer(JSON.stringify(this.template));
    var category = search_reply.register_category("processList", "Processes", "", category_renderer);

    data.getValue("processlist").forEach(function(process) {
        if (qs === "" || process["name"].search(qs) !== -1 || process["pid"].toString().search(qs) !== -1) {
            search_reply.push(this.createCard(process, category))
        }
    }.bind(this));
}

ProcessListCategory.prototype.createCard = function (process, category) {
    var categorised_result = new scopes.lib.CategorisedResult(category);
    var table = [
                ["CPU", process["cpu_percent"] + "%"],
                ["Memory", process["memory_percent"].toFixed(2) + "%"],
                ["Virt", data.convertByte(process["memory_info"][1])],
                ["Res", data.convertByte(process["memory_info"][0])],
                ["User", process["username"]],
                ["Nice", process["nice"]],
                ["Status", process["status"]],
                ["Command", process["cmdline"]],
            ];
    var attributes = [
                {"value": "CPU: " + process["cpu_percent"] + "%"},
                {"value": "Mem: " + process["memory_percent"].toFixed(2) + "%"},
            ];

    categorised_result.set("resultCategory", "processList");
    categorised_result.set_uri(process["pid"].toString());
    categorised_result.set_title(process["name"]);
    categorised_result.set("subtitle", "Pid: " + process["pid"]);
    categorised_result.set("emblem", data.getProcessEmblem(process));
    categorised_result.set("table", table);
    categorised_result.set("attributes", attributes);

    return categorised_result;
}

ProcessListCategory.prototype.createPreview = function(preview_reply) {
    var layout1col = new scopes.lib.ColumnLayout(1);
    layout1col.add_column(["header", "table"]);

    preview_reply.register_layout([layout1col]);

    var header = new scopes.lib.PreviewWidget("header", "header");
    header.add_attribute_mapping("title", "title");
    header.add_attribute_mapping("subtitle", "subtitle");
    header.add_attribute_mapping("emblem", "emblem");

    var table = new scopes.lib.PreviewWidget("table", "table");
    table.add_attribute_mapping("values", "table");

    preview_reply.push([header, table]);
    preview_reply.finished();
}

exports.ProcessListCategory = ProcessListCategory;
