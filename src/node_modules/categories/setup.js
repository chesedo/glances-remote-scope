var scopes = require('unity-js-scopes');

var SetupCategory = function() {
    this.template = {
        "schema-version": 1,
        "template": {
            "category-layout": "grid",
            "card-size": "large"
        },
        "components": {
            "summary": "summary"
        }
    }
}

SetupCategory.prototype.createCategory = function(search_reply) {
    var category_renderer = new scopes.lib.CategoryRenderer(JSON.stringify(this.template));
    var category = search_reply.register_category("setup", "", "", category_renderer);
    var categorised_result = new scopes.lib.CategorisedResult(category);

    categorised_result.set("resultCategory", "Setup");
    categorised_result.set_uri("Setup");
    categorised_result.set_title("About");
    categorised_result.set("summary", "Please setup the details of your remote Glances instance in this scope's settings");
    categorised_result.set("text", "This scope connects to a remote Glances instance to allow to monitor a remote machine (like on home server).\n\nYou can install Glances on a machine using `sudo apt-get install glances`\n\nThen start its web instance that exposes the API with `glances -w`");

    search_reply.push(categorised_result);
}


SetupCategory.prototype.createPreview = function(preview_reply) {
    var layout1col = new scopes.lib.ColumnLayout(1);
    layout1col.add_column(["header", "text"]);

    preview_reply.register_layout([layout1col]);

    var header = new scopes.lib.PreviewWidget("header", "header");
    header.add_attribute_mapping("title", "title");

    var text = new scopes.lib.PreviewWidget("text", "text");
    text.add_attribute_mapping("text", "text");

    preview_reply.push([header, text]);
    preview_reply.finished();
}

exports.SetupCategory = SetupCategory;
